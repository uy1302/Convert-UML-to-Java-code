<<< PROGRAM TEMPLATE >>>
{
  id1:{
    type: "class | interface | abstract",
    name: ""
    properties: {
      id: {
        "access": "public | private | protected"
        "name": "",
        "type": "",
      }
    },
    methods: {
      id: {
        "access": "public | private | protected"
        "name": "",
        "return-type": "",
      }
    },
    relationships: {
      implements: [],
      extends: []
    }
  }
}

TODO:
  - add HTML support in the syntax tree parser --> DONE
  - determine if class, interface or abstract --> DONE
  - add relationships --> DONE
  - check if the relationships are correct --> DONE
  - generate the code --> DONE
  - add getters and setters for the properties --> DONE
  - add parameters to documentation comments --> DONE 
  - format spacing for the py files --> DONE 
  - test multi-level interface implementation --> DONE

what to look for in the relationships:
  - start arrow and start fill 
  - end arrow and end fill
  - dashed

types of relationships:
  1) extends 
    - endArrow: block, endFill: 0 
  2) implements
    - endArrow: block, endFill: 0, dashed: 1
  3) association 
    - endArrow: block, startArrow: block, endFill: 1, 
    - endArrow: None
  4) aggregation 
    - endArrow: diamondThin, endFill: 0 
    - startArrow: diamondThin, endFill: 0 
  5) composition 
    - endArrow: diamondThin, endFill: 1
    - startArrow: diamondThin, endFill: 1
